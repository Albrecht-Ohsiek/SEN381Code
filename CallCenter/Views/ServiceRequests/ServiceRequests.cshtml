@model IEnumerable<CallCenter.Models.WorkRequest>;

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>Service Requests</title>
    <style>
        .sr {
            background-color: #ffffff;
            display: flex;
            flex-direction: row;
            justify-content: center;
            width: 100%;
        }


        .sr .button-text {
            font-family: "Inter-Regular", Helvetica;
            font-weight: 400;
            color: #ffffff;
            font-size: 20px;
            text-align: center;
            letter-spacing: 0;
            line-height: 15px;
            white-space: nowrap;
        }

        .sr .button {
            position: relative;
            width: 200px;
            height: 41px;
            background-color: #00376b;
            border-radius: 14px;
        }

        .sr .table-container {
            position: relative;
            top: 350px;
            width: 90%;
            border: #0065c240 solid 1px;
            margin: 0 auto;
            height: 380px;
            background-color: #d6ebff;
            overflow-y: auto;
        }

        .sr table {
            border-collapse: collapse;
            width: 100%;
            border-spacing: 4;
            height: 300px;
            display: table;
        }

        .sr th {
            position: sticky;
            top: 0;
            background-color: #238def;
            z-index: 2;
            font-family: "Inter-Regular", Helvetica;
            font-weight: 400;
            color: #000;
            font-size: 20px;
        }

        .sr td {
            z-index: 1;
            font-family: "Inter-Regular", Helvetica;
            font-weight: 400;
            color: #000;
            font-size: 15px;
            text-align: center;
            letter-spacing: 0;
            line-height: 15px;
        }

        .sr tbody {
            max-height: 400px;
            overflow: auto;
            border-spacing: 0;
        }

        .sr tr {
            margin-bottom: 10px;
        }

        .sr tr:nth-child(even) {
            background-color: #c3dffa;
            border-collapse: collapse;
            border-radius: 10px;
        }

        .sr tr.selected {
            background-color: #ffd700;
        }

        .sr .div {
            background-color: #ffffff;
            overflow-x: hidden;
            width: 1625px;
            height: 967px;
            position: relative;
        }

        .sr .text-wrapper {
            position: absolute;
            top: 304px;
            left: 831px;
            font-family: "Inter-Regular", Helvetica;
            font-weight: 400;
            color: #000000;
            font-size: 20px;
            text-align: center;
            letter-spacing: 0;
            line-height: 15px;
            white-space: nowrap;
        }

        .sr .rectangle {
            position: absolute;
            width: 260px;
            height: 41px;
            top: 292px;
            left: 1027px;
            background-color: #ffffff;
            border-radius: 14px;
            border: 1px solid;
            border-color: #00000080;
        }

        .sr .text-wrapper-8 {
            position: absolute;
            top: 301px;
            left: 210px;
            font-family: "Inter-Regular", Helvetica;
            font-weight: 400;
            color: #000000;
            font-size: 32px;
            text-align: center;
            letter-spacing: 0;
            line-height: 15px;
            white-space: nowrap;
        }

        .sr .frame {
            position: relative;
            top: 850px;
            text-align: center;
        }

        .sr #s-button {
            position: relative;
            top: 295px;
            left: 1300px;
        }
    </style>
</head>

<body>
    @Html.Partial("~/Views/Shared/Header.cshtml")
    <div class="sr">
        <div class="div">
            <div class="text-wrapper">Search Request ID:</div>
            <div class="rectangle"></div>
            <button type="button" class="button" id="s-button">
                <div class="button-text">Search</div>
            </button>
            <div class="frame">
                <button type="button" class="button">
                    <div class="button-text">Advance Status</div>
                </button>
                <button type="button" class="button">
                    <div class="button-text">Reassign</div>
                </button>
                <button type="button" class="button">
                    <div class="button-text">Escalate</div>
                </button>
                <button type="button" class="button">
                    <div class="button-text">View Details</div>
                </button>
                <button type="button" class="button">
                    <div class="button-text">Close</div>
                </button>
            </div>
            <div class="text-wrapper-8">SERVICE REQUESTS</div>
            <div class="table-container">
                <table id="data-table">
                    <thead>
                        <tr>
                            <th onclick="sortTable(0)">Priority Level</th>
                            <th onclick="sortTable(1)">Request ID</th>
                            <th onclick="sortTable(2)">Client Name</th>
                            <th onclick="sortTable(3)">Status</th>
                            <th onclick="sortTable(4)">Color</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.priority)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.requestId)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.clientId)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.status)</td>
                            </tr>
                            <tr>
                                @{
                                    var priorityText = item.priority;
                                }

                                <td>
                                    @if (string.IsNullOrEmpty(priorityText))
                                    {
                                        <span style="color: white;">No Priority</span>
                                    }
                                    else if (priorityText == "High")
                                    {
                                        <span style="color: red;">@priorityText</span>
                                    }
                                    else if (priorityText == "Medium")
                                    {
                                        <span style="color: orange;">@priorityText</span>
                                    }
                                    else if (priorityText == "Low")
                                    {
                                        <span style="color: green;">@priorityText</span>
                                    }
                                    else
                                    {
                                        <span>@priorityText</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        let ascending = true;
        function sortTable(columnIndex) {
            const table = document.getElementById("data-table");
            const rows = Array.from(table.getElementsByTagName("tr"));
            const isNumeric = columnIndex === 0 || columnIndex === 1;

            rows.shift(); // Remove the header row

            rows.sort((a, b) => {
                let aText = a.getElementsByTagName("td")[columnIndex].innerText;
                let bText = b.getElementsByTagName("td")[columnIndex].innerText;

                if (isNumeric) {
                    aText = parseInt(aText);
                    bText = parseInt(bText);
                }

                if (ascending) {
                    return aText > bText ? 1 : -1;
                } else {
                    return aText < bText ? 1 : -1;
                }
            });

            while (table.rows.length > 1) {
                table.deleteRow(1);
            }

            rows.forEach((row) => {
                table.appendChild(row);
            });

            changeHeaderColor(columnIndex);
            ascending = !ascending;
        }

        function changeHeaderColor(columnIndex) {
            const headers = document.getElementsByTagName("th");
            for (let i = 0; i < headers.length; i++) {
                if (i === columnIndex) {
                    headers[i].style.color = "#fff";
                } else {
                    headers[i].style.color = ""; // Reset other headers
                }
            }
        }

        // Get the table element
        let table = document.getElementById("table-data");

        // Get all the rows inside the table
        let rows = table.getElementsByTagName("tr");

        // Iterate through each row and attach a click event
        for (let i = 0; i < rows.length; i++) {
            rows[i].addEventListener("click", function () {
                // Remove 'selected' class from all rows
                for (let j = 0; j < rows.length; j++) {
                    rows[j].classList.remove("selected");
                }

                // Add 'selected' class to the clicked row
                this.classList.add("selected");
            });
        }
    </script>
</body>

</html>