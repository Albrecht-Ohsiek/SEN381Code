@model CallCenter.Models.Client;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <title>CallCenter</title>
    <style>
        #timer {
            font-size: 24px;
            font-family: Arial, sans-serif;
        }

        /* Style for the form container */
        #modalForm {
            display: none;
            max-width: 300px;
            /* Adjust the width as needed */
            margin: 20px;
        }

        /* Style for labels */
        label {
            display: block;
            /* Make labels appear on a new line */
            margin-top: 10px;
            /* Add some margin above each label */
            font-weight: bold;
        }

        /* Style for inputs */
        input[type="text"],
        select {
            width: 100%;
            /* Make inputs expand to fill the container width */
            padding: 5px;
            margin-top: 5px;
            /* Add some margin above each input */
            border: 1px solid #ccc;
            /* Add a simple border */
            border-radius: 5px;
            /* Add rounded corners */
        }

        /* Style for checkboxes and their labels container */
        .checkbox-container {
            display: flex;
            /* Display checkboxes and labels next to each other */
            align-items: center;
            /* Center vertically */
        }

        /* Style for checkboxes */
        input[type="checkbox"] {
            margin-right: 5px;
            /* Add some space between the checkbox and label */
        }

        /* Style for submit and close buttons */
        button {
            margin: 10px 0;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</head>

<body>
    @Html.Partial("~/Views/Shared/Header.cshtml")
    <div class="call-centre">
        <div class="phone-calls">
            <div class="heading">Phone Calls</div>
            <div class="calls">
                <button type="submit" class="button" id="answer" onclick="startTimer()">Answer Call</button>
                <button type="submit" class="button" id="end" onclick="stopTimer()">End Call</button>
            </div>

            <div class="caller-details">
                Call Timer: <p id="timer">Timer will appear here</p><br />
                <br />
                Caller ID:
            </div>

            <div class="history">
                <table>
                    <thead>
                        <h3>Caller History:</h3>
                    </thead>
                    <tbody>

                    </tbody>
                </table>
            </div>
            <div class="priority-level">
                <label for="priority">Select Priority:</label>
                <select id="priority" name="priority">
                    <option value="low">Low</option>
                    <option value="medium">Medium</option>
                    <option value="high">High</option>
                </select>
            </div>
            <div class="funcs">
                <button type="button" onclick="openModal()">Generate Work Request (Express)</button>
                <button type="submit" class="button" id="WR">
                    Generate Work Request
                </button>
                <button type="submit" class="button" id="ER">
                    Add Call to Existing Request
                </button>
            </div>
        </div>
        <div class="client-details">
            <div class="heading">Client Details</div>
            <div class="overlap-6">
                <div class="rectangle-2"></div>
                <div class="text-wrapper-10">View Client Contract Details</div>
            </div>
            <div class="search">
                <div class="default">Search:</div>
                <div class="search-bar"></div>
                <div class="button" id="Search">Search</div>
            </div>
            <div class="client">
                <table id="details">
                    <tr>
                        <td><span class="text-wrapper-5">Client Name:</span></td>
                        <td>
                            <span class="text-wrapper-4" id="c-name">@Html.DisplayNameFor(model =>
                                model.clientName)</span>
                        </td>
                    </tr>

                    <tr>
                        <td><span class="text-wrapper-5">Client ID:</span></td>
                        <td><span class="text-wrapper-4" id="c-id">@Html.DisplayNameFor(model => model.clientId)</span>
                        </td>
                    </tr>

                    <tr>
                        <td><span class="text-wrapper-5">Phone Number:</span></td>
                        <td>
                            <span class="text-wrapper-4" id="c-phone"> @Html.DisplayNameFor(model =>
                                model.phoneNumber)</span>
                        </td>
                    </tr>

                    <tr>
                        <td><span class="text-wrapper-5">Address:</span></td>
                        <td>
                            <span class="text-wrapper-4" id="c-address">
                                @Html.DisplayNameFor(model => model.clientAddress)
                            </span>
                        </td>
                    </tr>

                    <tr>
                        <td><span class="text-wrapper-5">Last Call Date:</span></td>
                        <td>
                            <span class="text-wrapper-4" id="c-last"> @Html.DisplayNameFor(model =>
                                model.lastCallDate)</span>
                        </td>
                    </tr>
                </table>
            </div>

            <div class="text-wrapper-14">Notes:</div>
            <div class="overlap-7">
                <table id="notes">
                    @Html.DisplayNameFor(model => model.clientNotes)
                </table>
            </div>
        </div>
    </div>

    <!-- modal form for generating express work requests -->
    <div id="modalForm" style="display:none;">
        <h3>Express Work Request</h3>

        <label class="One">Client Name:</label>
        <input type="text" name="clientName" />

        <label class="One">Client Phone Number:</label>
        <input type="text" name="clientPhone" />

        <label class="One">
            Client Address:</labe>
            <input type="text" name="clientAddress" />

            <label class="One">Problem Description:</label>
            <input type="text" name="problemDescription" />

            <label class="One">Select Technician:</label>
            <select name="technician" id="technicianDropdown">
            </select>

            <div>
                <div class="checkbox-container">
                    <input type="checkbox" id="notifyEmail" name="notifyEmail" value="Email">
                    <label for="notifyEmail">Notify Technician Via Email</label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="notifySMS" name="notifySMS" value="SMS">
                    <label for="notifySMS">Notify Technician Via SMS</label>
                </div>
                <div class="checkbox-container">
                    <input type="checkbox" id="notifyWhatsapp" name="notifyWhatsapp" value="Whatsapp">
                    <label for="notifyWhatsapp">Notify Technician Via Whatsapp</label>
                </div>

                <button type="button" onclick="submitForm()">Submit Express Request</button>
                <button type="button" onclick="closeModal()">Close</button>
            </div>

            <!-- overlay for the modal form -->
            <div id="overlay" style="display:none;"></div>

            <script>
                //open the modal form
                function openModal() {
                    document.getElementById('modalForm').style.display = 'block';
                    document.getElementById('overlay').style.display = 'block';
                }
                //close the modal form
                function closeModal() {
                    document.getElementById('modalForm').style.display = 'none';
                    document.getElementById('overlay').style.display = 'none';
                }
                //submit the form data and handle the response
                function submitForm() {
                    //collect form data
                    var formData = {
                        clientName: document.querySelector("input[name='clientName']").value,
                        clientPhone: document.querySelector("input[name='clientPhone']").value,
                        clientAddress: document.querySelector("input[name='clientAddress']").value,
                        problemDescription: document.querySelector("input[name='problemDescription']").value,
                        technicianId: document.querySelector("select[name='technician']").value,
                        notifyEmail: document.querySelector("input[name='notifyEmail']").checked,
                        notifySMS: document.querySelector("input[name='notifySMS']").checked,
                        notifyWhatsapp: document.querySelector("input[name='notifyWhatsapp']").checked
                    };
                    //send form data to the server
                    fetch('/CallCenter/NotifyTechnician', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData),
                    })
                        .then(response => {
                            if (!response.ok) {
                                return response.text().then(errorText => { throw new Error(errorText); });
                                closeModal();
                            }
                            alert("Technician notified successfully.")
                            return response.json();
                        })
                }
                //add technicians to dropdown menu
                window.onload = function () {
                    fetch('/CallCenter/GetTechnicians')
                        .then(response => response.json())
                        .then(data => {
                            var dropdown = document.getElementById('technicianDropdown');
                            data.forEach(tech => {
                                var option = document.createElement('option');
                                option.value = tech.split(':')[0].trim();
                                option.text = tech;
                                dropdown.add(option);
                            });
                        });
                };
                // Function to update the timer
                function updateTimer() {
                    let currentTime = new Date();
                    let hours = currentTime.getHours();
                    let minutes = currentTime.getMinutes();
                    let seconds = currentTime.getSeconds();

                    // Add leading zeros if the values are less than 10
                    minutes = (minutes < 10 ? '0' : '') + minutes;
                    seconds = (seconds < 10 ? '0' : '') + seconds;

                    let formattedTime = hours + ':' + minutes + ':' + seconds;
                    document.getElementById('timer').innerText = formattedTime;
                }

                // Function to start the timer
                function startTimer() {
                    intervalId = setInterval(updateTimer, 1000); // Update the timer every second
                }

                // Function to stop the timer
                function stopTimer() {
                    clearInterval(intervalId); // Stop the timer interval
                }
            </script>
</body>

</html>
